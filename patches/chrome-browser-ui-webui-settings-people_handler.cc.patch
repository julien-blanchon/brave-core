diff --git a/chrome/browser/ui/webui/settings/people_handler.cc b/chrome/browser/ui/webui/settings/people_handler.cc
index 57cd1e34ebbc19681692a7e4100677ab0510daea..b7590b4535ca840eee6fcc5ac704efe3b23687f4 100644
--- a/chrome/browser/ui/webui/settings/people_handler.cc
+++ b/chrome/browser/ui/webui/settings/people_handler.cc
@@ -89,6 +89,7 @@ struct SyncConfigInfo {
 };
 
 bool IsSyncSubpage(const GURL& current_url) {
+  BRAVE_IS_SYNC_SUBPAGE
   return current_url == chrome::GetSettingsUrl(chrome::kSyncSetupSubPage);
 }
 
@@ -797,6 +798,7 @@ void PeopleHandler::CloseSyncSetup() {
 
     service->LoginUIClosed(this);
   }
+  BRAVE_CLOSE_SYNC_SETUP
 
   // Alert the sync service anytime the sync setup dialog is closed. This can
   // happen due to the user clicking the OK or Cancel button, or due to the
@@ -861,7 +863,7 @@ void PeopleHandler::OnStateChanged(syncer::SyncService* sync) {
 
 void PeopleHandler::BeforeUnloadDialogCancelled() {
   // The before unload dialog is only shown during the first sync setup.
-  DCHECK(IdentityManagerFactory::GetForProfile(profile_)->HasPrimaryAccount());
+  // DCHECK(IdentityManagerFactory::GetForProfile(profile_)->HasPrimaryAccount());
   syncer::SyncService* service = GetSyncService();
   DCHECK(service && service->IsSetupInProgress() &&
          !service->GetUserSettings()->IsFirstSetupComplete());
@@ -909,6 +911,7 @@ std::unique_ptr<base::DictionaryValue> PeopleHandler::GetSyncStatusDictionary()
       service && !disallowed_by_policy && service->IsSetupInProgress() &&
           !service->GetUserSettings()->IsFirstSetupComplete() &&
           identity_manager->HasPrimaryAccount());
+  BRAVE_GET_SYNC_STATUS_DICTIONARY
 
   const sync_ui_util::StatusLabels status_labels =
       sync_ui_util::GetStatusLabels(profile_);
@@ -1056,6 +1059,7 @@ void PeopleHandler::MarkFirstSetupComplete() {
 }
 
 bool PeopleHandler::IsProfileAuthNeededOrHasErrors() {
+  return false;
   return !IdentityManagerFactory::GetForProfile(profile_)
               ->HasPrimaryAccount() ||
          SigninErrorControllerFactory::GetForProfile(profile_)->HasError();
